Index: grails-app/taglib/asset/pipeline/AssetsTagLib.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- grails-app/taglib/asset/pipeline/AssetsTagLib.groovy	(revision 13afdc2e8548dd6f7d52065432fdef53f969f8b0)
+++ grails-app/taglib/asset/pipeline/AssetsTagLib.groovy	(revision )
@@ -95,7 +95,7 @@
 		def assetRootPath = assetUriRootPath(grailsApplication, request)
 		def assetUrl = (!ignorePrefix && conf.url) ? conf.url : "$assetRootPath"
 
-		if(conf.precompiled) {
+		if(conf.precompiled && !conf.disableVersioningImage) {
 			def realPath = conf.manifest.getProperty(src)
 			if(realPath) {
 				return "${assetUrl}${realPath}"
Index: src/groovy/asset/pipeline/processors/CssProcessor.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/groovy/asset/pipeline/processors/CssProcessor.groovy	(revision 13afdc2e8548dd6f7d52065432fdef53f969f8b0)
+++ src/groovy/asset/pipeline/processors/CssProcessor.groovy	(revision )
@@ -3,6 +3,7 @@
 import java.net.URL
 class CssProcessor {
 	def precompilerMode
+    def conf = grailsApplication.config.grails.assets
 
 	CssProcessor(precompiler=false) {
 		this.precompilerMode = precompiler
@@ -14,7 +15,7 @@
 			def replacementPath = assetPath.trim()
 			if(cachedPaths[assetPath]) {
 				replacementPath = cachedPaths[assetPath]
-			} else if(isRelativePath(assetPath)) {
+			} else if(isRelativePath(assetPath) && !conf.disableVersioningImage) {
 				def urlRep = new URL("http://hostname/${assetPath}") //Split out subcomponents
 				def relativeFileName = [relativePath(assetFile.file),urlRep.path].join(File.separator)
 
